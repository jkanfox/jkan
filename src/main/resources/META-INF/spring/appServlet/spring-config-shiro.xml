<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!-- 凭证匹配器 -->
	<beans:bean id="credentialsMatcher" class="com.meiyun.jkan.security.RetryLimitHashedCredentialsMatcher">
		<beans:constructor-arg ref="springCacheManager"/>
        <beans:property name="hashAlgorithmName" value="md5"/>
        <beans:property name="hashIterations" value="2"/>
        <beans:property name="storedCredentialsHexEncoded" value="true"/>
	</beans:bean>

    <!-- Realm实现 -->
    <beans:bean id="userRealm" class="com.meiyun.jkan.security.UserRealm">
        <beans:property name="credentialsMatcher" ref="credentialsMatcher"/>
        <beans:property name="cachingEnabled" value="false"/>
    </beans:bean>

    <!-- 会话ID生成器 -->
    <beans:bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <beans:bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <beans:constructor-arg value="sid"/>
        <beans:property name="httpOnly" value="true"/>
        <beans:property name="maxAge" value="-1"/>
    </beans:bean>

    <beans:bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <beans:constructor-arg value="rememberMe"/>
        <beans:property name="httpOnly" value="true"/>
        <beans:property name="maxAge" value="2592000"/><!-- 30天 -->
    </beans:bean>

    <!-- rememberMe管理器 -->
    <beans:bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <beans:property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <beans:property name="cookie" ref="rememberMeCookie"/>
    </beans:bean>

    <!-- 会话DAO -->
    <beans:bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <beans:property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <beans:property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </beans:bean>

    <!-- 会话验证调度器 -->
    <beans:bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <beans:property name="sessionValidationInterval" value="1800000"/>
        <beans:property name="sessionManager" ref="sessionManager"/>
    </beans:bean>

    <!-- 会话管理器 -->
    <beans:bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <beans:property name="globalSessionTimeout" value="1800000"/>
        <beans:property name="deleteInvalidSessions" value="true"/>
        <beans:property name="sessionValidationSchedulerEnabled" value="true"/>
        <beans:property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <beans:property name="sessionDAO" ref="sessionDAO"/>
        <beans:property name="sessionIdCookieEnabled" value="true"/>
        <beans:property name="sessionIdCookie" ref="sessionIdCookie"/>
    </beans:bean>

    <!-- 安全管理器 -->
    <beans:bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <beans:property name="realm" ref="userRealm"/>
        <beans:property name="sessionManager" ref="sessionManager"/>
        <beans:property name="cacheManager" ref="cacheManager"/>
        <beans:property name="rememberMeManager" ref="rememberMeManager"/>
    </beans:bean>
    
    <beans:bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<beans:property name="securityManager" ref="securityManager" />
	</beans:bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <beans:property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <beans:property name="arguments" ref="securityManager"/>
    </beans:bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <beans:bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <beans:property name="usernameParam" value="username"/>
        <beans:property name="passwordParam" value="password"/>
        <beans:property name="rememberMeParam" value="rememberMe"/>
        <beans:property name="loginUrl" value="/login"/>
    </beans:bean>

    <!-- Shiro的Web过滤器 -->
    <beans:bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <beans:property name="securityManager" ref="securityManager"/>
        <beans:property name="loginUrl" value="/login"/>
        <beans:property name="filters">
            <util:map>
                <beans:entry  key="authc" value-ref="formAuthenticationFilter"/>
                <beans:entry key="sysUser" value-ref="sysUserFilter"/>
            </util:map>
        </beans:property>
        <beans:property name="filterChainDefinitions">
            <beans:value>
                /login = authc
                /logout = logout
                /authenticated = authc
                /** = user,sysUser
            </beans:value>
        </beans:property>
    </beans:bean>

    <!-- Shiro生命周期处理器-->
    <beans:bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans:beans>
